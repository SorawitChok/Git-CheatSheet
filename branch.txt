1. Ada decides to add a new feature or part to the code. She creates a new feature branch off of master:

git checkout master
git checkout -b adas-feature


2. Ada does some work on this feature

# work is done outside of terminal

git add .
git commit -m "Add progress on feature"


3. Ada takes a break, pushing her changes to GitHub

git push -u origin adas-feature


4. After talking to Ada, Bebe decides to help finish up the feature. She checks out the branch and makes some changes, then pushes them back to GitHub

# fetch will "download" commits from GitHub, without merging them
git fetch origin
git checkout adas-feature

# work is on adas-feature done outside of terminal

git add .
git commit -m "Add more progress on feature"
git push origin adas-feature


5. Ada downloads Bebeâ€™s changes

git pull origin adas-feature


6. Ada decides the feature is finished, and merges it back into master. But first, she makes sure she has the latest version of the master code to integrate her changes with

git checkout master  # switch to master
git pull origin master  # download any changes

git merge adas-feature  # merge the feature into the master branch
# fix any merge conflicts!!

git push origin master  # upload the updated code to master


7. And now that the feature has been successfully added to the project, Ada can delete the feature branch (using git branch -d branch_name). See also here.
